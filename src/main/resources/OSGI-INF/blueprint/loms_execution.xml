<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <bean class="com.mongodb.MongoClient" id="mongoBeanExecution">
        <argument index="0" value="localhost"/>
        <argument index="1" value="27017"/>
    </bean>
    <camelContext id="LOMS_EXECUTION" autoStartup="true" streamCache="true" trace="true" xmlns="http://camel.apache.org/schema/blueprint">
        <route autoStartup="true" id="prices">
            <from id="prices_quartz2" uri="quartz2://prices/trigger?trigger.repeatInterval=1000"/>
            <to id="get_prices" uri="http4://localhost:5000/btc-price"/>
            <unmarshal id="json_unmarshal_prices">
                <json library="Jackson"/>
            </unmarshal>
            <setBody><simple>{ "price": ${body[price]}, "timestamp": {"$date": "${body[timestamp]}Z" } }</simple></setBody>
            <to id="mongodb_storePrices" uri="mongodb:mongoBeanExecution?database=loms&amp;collection=prices&amp;operation=insert"/>
        </route>
        <route autoStartup="true" id="poll">
            <from id="quartz2" uri="quartz2://loms_ecxecution/trigger?trigger.repeatInterval=5000"/>
            <setHeader headerName="mongoQuery">
            	<simple>{ "timestamp": { $lt: ISODate("${date-with-timezone:in.header.fireTime:UTC:yyyy-MM-dd'T'HH:mm:ss}Z") }}</simple>
            </setHeader>
            <setBody id="setBody_interval">
                <simple>${header[mongoQuery]}</simple>
            </setBody>
            <to id="mongodb_createAccount" uri="mongodb:mongoBeanExecution?database=loms&amp;collection=prices&amp;operation=findAll"/>
            <split>
            	<simple>${body}</simple>
            	<to id="poll_seda" uri="seda:execute"/>
            </split>
            <setBody id="setBody_interval">
                <simple>${header[mongoQuery]}</simple>
            </setBody>
            <to id="mongodb_createAccount" uri="mongodb:mongoBeanExecution?database=loms&amp;collection=prices&amp;operation=remove"/>
        </route>
        <route autoStartup="true" id="execute">
            <from id="execute_seda" uri="seda:execute"/>
            <setBody id="setBody_execute">
                <simple>{ $or: [ { priceLimit: { $gt: ${body[price]} } }, { executed: { $eq: false } } ] } </simple>
            </setBody>
            <to id="mongodb_createAccount" uri="mongodb:mongoBeanExecution?database=loms&amp;collection=prices&amp;operation=findAll"/>
            <split>
            	<simple>${body}</simple>
            	<to id="orders" uri="seda:orders"/>
            </split>
        </route>
        <route autoStartup="true" id="orders">      
    </camelContext>
</blueprint>